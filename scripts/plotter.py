import matplotlib.pyplot as plt
import numpy as np

EXPONENT = -9

values = [
    (0, 2.9043e-05),
    (100, 0.00524905),
    (200, 0.0269295),
    (300, 0.0388451),
    (400, 0.0449608),
    (500, 0.078787),
    (600, 0.12861),
    (700, 0.197309),
    (800, 0.287665),
    (900, 0.397417),
    (1000, 0.531387),
    (1100, 0.692815),
    (1200, 0.88549),
    (1300, 1.18199),
    (1400, 1.42928),
    (1500, 2.16203),
    (1600, 2.18937),
    (1700, 2.84138),
    (1800, 3.59138),
    (1900, 4.3267),
    (2000, 5.17583),
    (2100, 6.51952),
    (2200, 8.30273),
    (2300, 8.89148),
    (2400, 10.8802),
    (2500, 12.4128),
    (2600, 14.4468),
    (2700, 16.3335),
    (2800, 18.4415),
    (2900, 20.6584),
    (3000, 22.6428),
    (3100, 25.2083),
    (3200, 28.1462),
    (3300, 31.3131),
    (3400, 34.0888),
    (3500, 38.1645),
    (3600, 40.7634),
    (3700, 44.1912),
    (3800, 48.5768),
    (3900, 51.7827),
    (4000, 55.7317),
    (4100, 60.3407),
    (4200, 65.1092),
    (4300, 68.6014),
    (4400, 74.9089),
    (4500, 77.9202),
    (4600, 86.9648),
    (4700, 91.6005),
    (4800, 96.8422),
    (4900, 101.91),
    (5000, 105.255),
    (5100, 111.841),
    (5200, 125.647),
    (5300, 128.749),
]
x_values, y_values = zip(*values)

n_values = np.array(x_values)
n_cubed = 10**EXPONENT * n_values**3

plt.plot(x_values, y_values, marker="o", linestyle="-", color="b", label="Actual")
plt.plot(
    n_values,
    n_cubed,
    marker="s",
    linestyle="--",
    color="g",
    label=f"$10^{{{EXPONENT}}} n^3$",
)

plt.title("Time complexity")
plt.xlabel("Matrix size")
plt.ylabel("Time")
plt.legend()
plt.grid(True)
plt.show()
